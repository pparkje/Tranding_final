<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="AdminsMapper">
	<resultMap id="AdminsMap"
		type="study.spring.trspring.model.Admins">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="id" column="id" />
		<result property="a_name" column="a_name" />
		<result property="a_id" column="a_id" />
		<result property="a_pw" column="a_pw" />
		<result property="a_email" column="a_email" />
	</resultMap>
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="study.spring.trspring.model.Admins"
		resultMap="AdminsMap">
		SELECT id,a_name,a_id,a_pw,a_email
		FROM admins
		WHERE id = #{id}
		<if test="a_id != null and a_id != ''">
			AND	a_id LIKE concat('%', #{a_id}, '%')
		</if>
		<if test="a_pw != null and a_pw != ''">
			AND	a_pw LIKE concat('%', md5(#{a_pw}), '%')
		</if>
	</select>
	<!--관리자 로그인을 위한 기능 정의 -->
	<select id="selectItemLogin"
		parameterType="study.spring.trspring.model.Admins"
		resultMap="AdminsMap">
		SELECT id,a_name,a_id,a_pw,a_email
		FROM admins
		<where>
			<if test="a_id != null and a_id != ''">
				a_id LIKE concat('%', #{a_id}, '%')
			</if>
			<if test="a_pw != null and a_pw != ''">
				AND	a_pw LIKE concat('%', md5(#{a_pw}), '%')
			</if>
		</where>
	</select>
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="study.spring.trspring.model.Admins"
		resultMap="AdminsMap">
		SELECT  id,a_name,a_id,a_pw,a_email FROM admins
		
		<where>
			<if test="a_id != null and a_id != '' ">
				a_id LIKE concat('%', #{a_id}, '%')
			</if>
		</where>
		
		ORDER BY id ASC
		
		<if test="listCount > 0" >
		LIMIT #{offset}, #{listCount}
		</if>
	</select>
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.spring.trspring.model.Admins"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO admins (
		a_name,a_id,a_pw,a_email
		) 
		VALUES (
		#{a_name},#{a_id},md5( #{a_pw} ),#{a_email}
		)
	</insert>
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="study.spring.trspring.model.Admins">
		DELETE FROM admins  where id = #{id}
	</delete>
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="study.spring.trspring.model.Admins">
		UPDATE admins SET 
		a_name=#{a_name},a_id=#{a_id},a_pw=md5( #{a_pw} ),a_email=#{a_email}
		WHERE id=#{id}
	</update>
	<!-- 조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다. count , max , min , sum , avg 함수를 
		사용한 경우 Mapper 에서는 resultMap이 아닌 resultType 으로 반환한다. -->
	<!-- 데이터 수 조회하기 -->
	<select id="selectCountAll"
		parameterType="study.spring.trspring.model.Admins"
		resultType="int">
		SELECT COUNT(*) FROM admins
		<where>
			<if test="a_id != null and a_id != ''">
				a_id LIKE concat('%', #{a_id}, '%')
			</if>
			<if test="a_pw != null and a_pw != ''">
				AND a_pw LIKE concat('%', md5( #{a_pw} ) , '%')
			</if>
			
		</where>
	</select>
</mapper>