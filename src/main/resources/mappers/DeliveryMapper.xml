<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="DeliveryMapper">
	<resultMap id="DeliveryMap"
		type="study.spring.trspring.model.Delivery">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="id" column="id" />
		<result property="a_area" column="a_area" />
		<result property="a_postcode_start" column="a_postcode_start" />
		<result property="a_postcode_end" column="a_postcode_end" />
		<result property="a_add_money" column="a_add_money" />
	</resultMap>
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="study.spring.trspring.model.Delivery"
		resultMap="DeliveryMap">
		SELECT 
			id,a_area,a_postcode_start,a_postcode_end,a_add_money
		FROM add_delivery
		WHERE id = #{id}
	</select>
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="study.spring.trspring.model.Delivery"
		resultMap="DeliveryMap">
		SELECT  
			id,a_area,a_postcode_start,a_postcode_end,a_add_money
		FROM add_delivery
		
		<where>
			<if test="a_area != null and a_area != ''">
				a_area LIKE concat('%', #{a_area}, '%')
			</if>
		</where>
		
		ORDER BY id ASC
		
		<if test="listCount > 0" >
		LIMIT #{offset}, #{listCount}
		</if>
	</select>
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.spring.trspring.model.Delivery"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO add_delivery (
		a_area,a_postcode_start,a_postcode_end,a_add_money
		) 
		VALUES (
		#{a_area},#{a_postcode_start},#{a_postcode_end},#{a_add_money}
		)
	</insert>
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="study.spring.trspring.model.Delivery">
		DELETE FROM add_delivery WHERE id=#{id}

	</delete>
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="study.spring.trspring.model.Delivery">
		UPDATE add_delivery SET 
		a_area=#{a_area},a_postcode_start=#{a_postcode_start},a_postcode_end=#{a_postcode_end},a_add_money=#{a_add_money}
		WHERE id=#{id}
	</update>
	<!-- 조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다. count , max , min , sum , avg 함수를 
		사용한 경우 Mapper 에서는 resultMap이 아닌 resultType 으로 반환한다. -->
	<!-- 데이터 수 조회하기 -->
	<select id="selectCountAll"
		parameterType="study.spring.trspring.model.Delivery"
		resultType="int">
		SELECT COUNT(*) FROM add_delivery
		<where>
			<if test="a_area != null and a_area != ''">
				a_area LIKE concat('%', #{a_area}, '%')
			</if>
		</where>
	</select>
	
	
</mapper>